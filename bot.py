import logging
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, ConversationHandler
import random
import asyncio
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è ConversationHandler
USERNAME, VIOLATION_TYPE, NUM_COMPLAINTS, CONFIRMATION = range(4)

violations = {
    1: ['–°–ø–∞–º', ['–£–≤–∞–∂–∞–µ–º–∞—è —Å–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏, –æ–±—Ä–∞—â–∞–µ–º –≤–∞—à–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username}, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞—Å—Å—ã–ª–∞–µ—Ç –±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ–π —Ä–µ–∫–ª–∞–º—ã –∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–∞—Ö –∏ –≥—Ä—É–ø–ø–∞—Ö Telegram. –ü—Ä–æ—Å–∏–º –ø—Ä–∏–Ω—è—Ç—å –º–µ—Ä—ã –ø–æ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏—é –¥–∞–Ω–Ω–æ–≥–æ —Å–ø–∞–º–∞.',
                  '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –∞–∫—Ç–∏–≤–Ω–æ –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª—è–µ—Ç —Ä–∞—Å—Å—ã–ª–∫–æ–π —Å–ø–∞–º–∞, —á—Ç–æ –Ω–∞—Ä—É—à–∞–µ—Ç –≤–µ–∂–ª–∏–≤–æ—Å—Ç—å –∏ –ø—Ä–∞–≤–∏–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π Telegram. –ü–æ–∂–∞–ª—É—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∏ –ø—Ä–∏–º–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –º–µ—Ä—ã.']],
    2: ['–ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ', ['–£–≤–∞–∂–∞–µ–º–∞—è —Å–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏, –ø—Ä–æ—à—É –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username}, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —É—á–∞—Å—Ç–∏–µ –≤ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏—Ö —Å—Ö–µ–º–∞—Ö. –î–∞–Ω–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –≤—ã–∑—ã–≤–∞–µ—Ç —Å–æ–º–Ω–µ–Ω–∏—è –∏ —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏.',
                          '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏—á–∞—Å—Ç–µ–Ω –∫ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å–∫–∏–º –¥–µ–π—Å—Ç–≤–∏—è–º, —Å—Ç–æ–∏—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∏ –¥–µ–π—Å—Ç–≤–∏—è –¥–∞–Ω–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ.']],
    3: ['–ü–æ—Ä–Ω–æ–≥—Ä–∞—Ñ–∏—è', ['–£–≤–∞–∂–∞–µ–º–∞—è —Å–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏, —è–≤–ª—è—é—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º Telegram –∏ –∑–∞–º–µ—Ç–∏–ª –Ω–∞—Ä—É—à–µ–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–Ω—Ç–µ –∞–∫–∫–∞—É–Ω—Ç–∞ {username}, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ—Ä–Ω–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –º–∞—Ç–µ—Ä–∏–∞–ª. –ü—Ä–æ—à—É –ø—Ä–∏–Ω—è—Ç—å –º–µ—Ä—ã –ø–æ —É–¥–∞–ª–µ–Ω–∏—é –¥–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏.',
                        '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –∞–∫—Ç–∏–≤–Ω–æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –≤–∑—Ä–æ—Å–ª—ã—Ö, —á—Ç–æ –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—Ç –ø—Ä–∞–≤–∏–ª–∞–º –∏ —Ü–µ–ª—è–º Telegram –∫–∞–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–∞.']],
    4: ['–ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª', ['–£–≤–∞–∂–∞–µ–º–∞—è —Å–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏, –æ–±—Ä–∞—â–∞–µ–º –≤–∞—à–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –∞–±–æ–Ω–µ–Ω—Ç–∞ {username}, –∫–æ—Ç–æ—Ä—ã–π —Å–∏—Å—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Ä—É—à–∞–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã Telegram. –ü—Ä–æ—Å–∏–º –ø—Ä–∏–Ω—è—Ç—å –º–µ—Ä—ã –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏–∏ –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã –æ–±–µ—Å–ø–µ—á–∏—Ç—å —Å–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ—Å—Ç–≤–∞.',
                            '–õ–∏—á–Ω–æ—Å—Ç—å {username} –ø—Ä–æ–≤–æ—Ü–∏—Ä—É–µ—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –∏ —Ä–∞–∑–º–µ—â–∞–µ—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤ —á–∞—Ç–∞—Ö –∏ –∫–∞–Ω–∞–ª–∞—Ö Telegram, —á—Ç–æ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–æ –∏ —Ç—Ä–µ–±—É–µ—Ç –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞. –ü—Ä–æ—Å–∏–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –ø—Ä–∏–Ω—è—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –º–µ—Ä—ã.']],
}

phone_numbers_templates = [
    "+7917**11**2", "+7926**386**", "+7952**99*63", "+7903**76*82", "+7914**237*7*",
    "+7937**61***", "+7978**42***", "+7982**89***", "+7921**57***", "+7991**34***",
    "+7910**68***", "+7940**15***", "+7961**72***", "+7985**49***", "+7951**27***",
    "+7916**83***", "+7932**95***", "+7975**44***", "+7989**78***", "+7993**64***",
    "+7923**58***", "+7970**30***", "+7960**17***", "+7995**48***", "+7953**25***",
    "+7919**77***", "+7938**36***", "+7986**62***", "+7907**81*7*", "+7947**53*6*",
    "+7971**29***"
]

def generate_complaint(username, violation):
    complaint_text = random.choice(violations[violation][1]).format(username=username)
    return complaint_text

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    await update.message.reply_text(
        f"üëã –ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n\n"
        "–≠—Ç–æ –±–æ—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∂–∞–ª–æ–± –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π Telegram.\n\n"
        "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –≤–≤–µ–¥–∏—Ç–µ /complaint\n"
        "–î–ª—è –æ—Ç–º–µ–Ω—ã –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –≤–≤–µ–¥–∏—Ç–µ /cancel"
    )

async def complaint(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –æ—Ç–ø—Ä–∞–≤–∫–∏ –∂–∞–ª–æ–±—ã"""
    await update.message.reply_text(
        "üìù –í–≤–µ–¥–∏—Ç–µ username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è "
        "(–Ω–∞–ø—Ä–∏–º–µ—Ä: @username –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ username):"
    )
    return USERNAME

async def get_username(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–ª—É—á–∞–µ—Ç username –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    username = update.message.text.strip()
    if username.startswith('@'):
        username = username[1:]
    
    if len(username) < 3:
        await update.message.reply_text("‚ùå Username —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:")
        return USERNAME
    
    context.user_data['username'] = username
    
    keyboard = [
        ["1 - –°–ø–∞–º", "2 - –ú–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ"],
        ["3 - –ü–æ—Ä–Ω–æ–≥—Ä–∞—Ñ–∏—è", "4 - –ù–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª"]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    
    await update.message.reply_text(
        "üìã –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –Ω–∞—Ä—É—à–µ–Ω–∏—è:",
        reply_markup=reply_markup
    )
    return VIOLATION_TYPE

async def get_violation_type(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–ª—É—á–∞–µ—Ç —Ç–∏–ø –Ω–∞—Ä—É—à–µ–Ω–∏—è"""
    text = update.message.text
    if text.startswith(('1', '2', '3', '4')):
        violation_type = int(text[0])
        context.user_data['violation_type'] = violation_type
        await update.message.reply_text(
            "üî¢ –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∞–ª–æ–± –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ (1-30):",
            reply_markup=ReplyKeyboardMarkup([['1', '5', '10'], ['15', '20', '30']], 
                                           one_time_keyboard=True, resize_keyboard=True)
        )
        return NUM_COMPLAINTS
    else:
        await update.message.reply_text("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –Ω–∞—Ä—É—à–µ–Ω–∏—è –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.")
        return VIOLATION_TYPE

async def get_num_complaints(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–ª—É—á–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∞–ª–æ–±"""
    try:
        num_complaints = int(update.message.text)
        if 1 <= num_complaints <= 30:
            context.user_data['num_complaints'] = num_complaints
            
            username = context.user_data['username']
            violation_type = context.user_data['violation_type']
            violation_name = violations[violation_type][0]
            
            await update.message.reply_text(
                f"üìã –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ:\n\n"
                f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username}\n"
                f"‚ö†Ô∏è  –¢–∏–ø –Ω–∞—Ä—É—à–µ–Ω–∏—è: {violation_name}\n"
                f"üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∞–ª–æ–±: {num_complaints}\n\n"
                f"–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ '–¥–∞', –¥–ª—è –æ—Ç–º–µ–Ω—ã - '–Ω–µ—Ç'",
                reply_markup=ReplyKeyboardMarkup([['–¥–∞', '–Ω–µ—Ç']], 
                                               one_time_keyboard=True, resize_keyboard=True)
            )
            return CONFIRMATION
        else:
            await update.message.reply_text("‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∞–ª–æ–± –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 30. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑:")
            return NUM_COMPLAINTS
    except ValueError:
        await update.message.reply_text("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 30:")
        return NUM_COMPLAINTS

async def confirmation(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∂–∞–ª–æ–±—ã"""
    if update.message.text.lower() == '–¥–∞':
        username = context.user_data['username']
        violation_type = context.user_data['violation_type']
        num_complaints = context.user_data['num_complaints']
        violation_name = violations[violation_type][0]
        
        phone_numbers = []
        for tpl in random.choices(phone_numbers_templates, k=num_complaints):
            phone_number = ''.join(random.choice('0123456789') if char == '*' else char for char in tpl)
            phone_numbers.append(phone_number)
        
        message = await update.message.reply_text(
            f"üöÄ –ù–∞—á–∏–Ω–∞—é –æ—Ç–ø—Ä–∞–≤–∫—É {num_complaints} –∂–∞–ª–æ–± –Ω–∞ @{username}...\n\n"
            f"‚è≥ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è..."
        )
        
        success_count = 0
        for i, phone_number in enumerate(phone_numbers, 1):
            complaint_text = generate_complaint(username, violation_type)
            
            await asyncio.sleep(0.5)
            
            if i % 5 == 0 or i == num_complaints:
                await message.edit_text(
                    f"üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∂–∞–ª–æ–±...\n"
                    f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {i}/{num_complaints}\n"
                    f"üìû –° –Ω–æ–º–µ—Ä–∞: {phone_number}"
                )
            
            success_count += 1
        
        await update.message.reply_text(
            f"‚úÖ –ì–æ—Ç–æ–≤–æ! –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {success_count} –∂–∞–ª–æ–± –Ω–∞ @{username}\n"
            f"‚ö†Ô∏è  –¢–∏–ø –Ω–∞—Ä—É—à–µ–Ω–∏—è: {violation_name}\n\n"
            f"–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ–π –∂–∞–ª–æ–±—ã –≤–≤–µ–¥–∏—Ç–µ /complaint",
            reply_markup=ReplyKeyboardMarkup([['/complaint']], resize_keyboard=True)
        )
        
    else:
        await update.message.reply_text(
            "‚ùå –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.\n\n"
            "–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∂–∞–ª–æ–±—ã –≤–≤–µ–¥–∏—Ç–µ /complaint"
        )
    
    return ConversationHandler.END

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–º–µ–Ω—è–µ—Ç —Ç–µ–∫—É—â—É—é –æ–ø–µ—Ä–∞—Ü–∏—é"""
    await update.message.reply_text(
        "‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.\n\n"
        "–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π –∂–∞–ª–æ–±—ã –≤–≤–µ–¥–∏—Ç–µ /complaint",
        reply_markup=ReplyKeyboardMarkup([['/complaint']], resize_keyboard=True)
    )
    return ConversationHandler.END

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–∫—É"""
    await update.message.reply_text(
        "ü§ñ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:\n\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/complaint - –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n"
        "üìù –î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∂–∞–ª–æ–±—ã –≤–∞–º –Ω—É–∂–Ω–æ:\n"
        "1. –£–∫–∞–∑–∞—Ç—å username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
        "2. –í—ã–±—Ä–∞—Ç—å —Ç–∏–ø –Ω–∞—Ä—É—à–µ–Ω–∏—è\n"
        "3. –£–∫–∞–∑–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∞–ª–æ–±\n"
        "4. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É\n\n"
        "‚ö†Ô∏è  –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ!"
    )

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    BOT_TOKEN = os.getenv('BOT_TOKEN')
    
    if not BOT_TOKEN:
        logger.error("‚ùå BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        return
    
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('complaint', complaint)],
        states={
            USERNAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_username)],
            VIOLATION_TYPE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_violation_type)],
            NUM_COMPLAINTS: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_num_complaints)],
            CONFIRMATION: [MessageHandler(filters.TEXT & ~filters.COMMAND, confirmation)],
        },
        fallbacks=[CommandHandler('cancel', cancel)],
    )
    
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(conv_handler)
    
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    application.run_polling()

if __name__ == '__main__':
    main()
